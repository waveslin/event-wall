{"version":3,"sources":["components/layout/SignInLinks.js","store/actions/authAction..js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/dashboard/Notificaations.js","components/activities/ActivitySummary.js","components/activities/ActivityList.js","components/dashboard/Dashboard.js","components/activities/ActivityDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/activities/CreateActivity.js","store/actions/ActivityActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/activityReducer.js","store/reducers/rootReducer.js","config/FbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","getFirebase","auth","then","type","logout","props","className","to","onClick","profile","initial","SignOutLinks","state","links","uid","isLoaded","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ActivitySummary","activity","pathname","title","author_F","author_L","date","calendar","ActivityList","activities","Dashboard","this","Component","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","Activity","ownProps","match","params","data","SignIn","email","password","signInSubmit","e","preventDefault","signIn","signInChange","setState","target","value","authError","action","onSubmit","htmlFor","onChange","credatials","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUpSubmit","signUp","signUpChange","getFirestore","createUserWithEmailAndPassword","result","doc","set","CreateActivity","mySubmit","createActivity","history","push","myChange","name","userId","add","authorId","Date","App","exact","path","component","ActicityDetails","Boolean","window","location","hostname","initState","authReducer","console","log","message","activityReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","apps","length","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77e0ea5f.chunk.js","sourcesContent":["import React, { Profiler } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authAction.';\r\n\r\nconst SignInLinks = (props)=>{\r\n    return (\r\n       <ul className=\"right\">\r\n           <li><NavLink to='/create'>New Event</NavLink></li>\r\n           <li><a onClick={props.signOut}>Log Out</a></li>\r\n           <li><NavLink to='/' className=\"btn btn-floating  red accent-4\">{props.profile.initial}</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nconst mapDispathToProps = dispatch =>{\r\n    return {\r\n        signOut: ()=> dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispathToProps)(SignInLinks);","export const signIn = credentials =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch(err =>{\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport const signOut = ()=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n        firebase.logout();\r\n    }\r\n}\r\n\r\nexport const signUp = user =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            user.email,\r\n            user.password\r\n        ).then(result =>{\r\n            return firestore.collection('users').doc(result.user.uid).set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                initial: user.firstName[0]+user.lastName[0]\r\n            });\r\n        }).then(()=> {\r\n            dispatch({type: 'SIGNUP_SUCCESS'});\r\n        }).catch(err =>{\r\n            dispatch({type: 'SIGNUP_ERROR', err});\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignOutLinks = ()=>{\r\n    return (\r\n       <ul className=\"right\">\r\n           <li><NavLink to='/signup'>Register</NavLink></li>\r\n           <li><NavLink to='/signin'>Log In</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignInLinks from './SignInLinks';\r\nimport SignOutLinks from './SignOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props)=>{\r\n    const {auth, profile} = props;\r\n    const links =  auth.uid ? <SignInLinks profile={profile}/> : <SignOutLinks />; \r\n    return (\r\n        <nav className=\"nav-wrapper red darken-4\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo bold\"><h2 className='mp'>Events-Wall</h2></Link>\r\n                {auth.isLoaded && links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        auth : state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) =>{\r\n    const {notifications} = props;\r\n    return (\r\n        <div className='section'>\r\n            <div className=\"card z-depth-1 grey lighten-3\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"card-title\">\r\n                    <h4 className='center'>Notifications</h4>\r\n                    </div>\r\n                    <ul className='notification'>\r\n                        {notifications && notifications.map(notification =>{\r\n                            return (\r\n                                <li key={notification.id} className='mb-1'>\r\n                                    <div className='line-justify'>\r\n                                    <span className='deep-orange-text'> {notification.user} </span>\r\n                                    <span>{notification.content}</span>\r\n                                    </div>\r\n                                    <div className=\"note-date grey-text lighten-3 line-end\"> {moment(notification.time.toDate()).fromNow()} </div>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ActivitySummary = ({activity})=>{\r\n    return (\r\n        <Link to={{pathname: \"/activity/\"+activity.id, state: activity }} className=\"black-text\">\r\n            <div className=\"card z-depth-0 activity-summary container\">\r\n                <div className=\"card-content\">\r\n                    <blockquote className=\"mp-0 bs-0 hover-grey\">\r\n                        <span className=\"card-title\">{activity.title}</span>\r\n                        <p>Post by {activity.author_F} {activity.author_L}</p>\r\n                        <p className=\"grey-text\">{moment(activity.date.toDate()).calendar()}</p>\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default ActivitySummary;","import React from 'react';\r\nimport ActivitySummary from './ActivitySummary';\r\n\r\n\r\nconst ActivityList = ({activities})=>{\r\n\r\n    const activity = activities && activities.map(activity =>{\r\n        return  (<ActivitySummary activity={activity} key={activity.id}/>);\r\n    });\r\n\r\n    return (\r\n        <div className=\"activity-list section\">\r\n            {activity}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActivityList;","import React, {Component} from 'react';\r\nimport Notifications from './Notificaations';\r\nimport ActivityList from '../activities/ActivityList';\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component{\r\n    \r\n    render(){\r\n        const {activities, auth, notifications} = this.props;\r\n        if (auth.isLoaded && !auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ActivityList activities={activities}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    if(state.firestore.ordered.Activity)\r\n        return {\r\n            activities: state.firestore.ordered.Activity,\r\n            auth : state.firebase.auth,\r\n            notifications: state.firestore.ordered.notifications\r\n        };\r\n    else\r\n        return {\r\n            activities:  state.activity.activities,\r\n            auth : state.firebase.auth\r\n        };\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([{collection: 'Activity', orderBy: ['date', 'desc']}, {collection: 'notifications', limit: 5, orderBy: ['time', 'desc']}]),\r\n    connect(mapStateToProps)\r\n    )(Dashboard);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ActivityDetails = (props) => {\r\n    const {activity, id, auth} = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    \r\n\r\n    if(activity)\r\n    return (\r\n        <div className=\"activity-detais container section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content \">\r\n                    <span className=\"card-title\">{activity.title} - {id}</span>\r\n                    <p>{activity.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-5 grey-text\">\r\n                    <div>\r\n                    <div>Post by {activity.author_F} {activity.author_L}</div>\r\n                    <div className=\"grey-text\">{moment(activity.date.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    else\r\n    return(\r\n        <div className=\"container\">\r\n            <h3 className=\"white-text center\">LOADING . . .</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    const id = ownProps.match.params.id;\r\n    const activities = state.firestore.data.Activity;\r\n    const activity = activities ? activities[id] : null\r\n    return {\r\n       activity: activity,\r\n       id : id,\r\n       auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, firestoreConnect(['Activity'])))(ActivityDetails);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../store/actions/authAction.';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password: ''\r\n    }\r\n\r\n    signInSubmit = e =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    signInChange = e =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form action=\"\" className=\"blue-grey lighten-5 form\" onSubmit={this.signInSubmit}>\r\n                    <h4 className=\"grey-text text-darken-2 center\">Sign In</h4>\r\n                    <div className=\"container\">\r\n                        <div className=\"input-field center\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.signInChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.signInChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"submit\" className=\"btn-large deep-orange accent-3 right z-depth-0 waves-effect waves-light sumbit\" value=\"Login\"/>\r\n                            <div className=\"red-text right\">\r\n                                {authError ? <p>{authError}</p> : <p> </p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        signIn: credatials => dispatch(signIn(credatials))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {signUp} from '../../store/actions/authAction.'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email:'',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    signUpSubmit = e =>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    signUpChange = e =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form action=\"\" className=\"blue-grey lighten-5 form\" onSubmit={this.signUpSubmit}>\r\n                    <h4 className=\"grey-text text-darken-2 center\">Sign Up</h4>\r\n                    <div className=\"container\">\r\n                        <div className=\"input-field center\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.signUpChange}/>\r\n                        </div>\r\n                        <div className=\"input-field center\">\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                            <input type=\"text\" id=\"lastName\" onChange={this.signUpChange}/>\r\n                        </div>\r\n                        <div className=\"input-field center\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input type=\"text\" id=\"firstName\" onChange={this.signUpChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.signUpChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"submit\" className=\"btn-large deep-orange accent-3 right z-depth-0 waves-effect waves-light sumbit\" value=\"Sign up\"/>\r\n                            <div className=\"red-text right\">\r\n                                {authError ? <p>{authError}</p> : <p> </p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>{\r\n    return {\r\n        signUp: user =>dispatch(signUp(user))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createActivity} from '../../store/actions/ActivityActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateActivity extends Component {\r\n    state = {\r\n        title:'',\r\n        content: ''\r\n    }\r\n\r\n    mySubmit = e =>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createActivity(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    myChange = e =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {auth} = this.props;\r\n        if (auth.isLoaded && !auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form action=\"\" className=\"blue-grey lighten-5 form\" onSubmit={this.mySubmit}>\r\n                    <h4 className=\"grey-text text-darken-2 center\">New Activity</h4>\r\n                    <div className=\"container\">\r\n                        <div className=\"input-field center\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input type=\"text\" id=\"title\" onChange={this.myChange}/>\r\n                        </div>\r\n                        <div className=\"input-field center\">\r\n                            <label htmlFor=\"content\">Content</label>\r\n                            <textarea name=\"content\" id=\"content\" className=\"materialize-textarea\" onChange={this.myChange}></textarea>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"submit\" className=\"btn-large deep-orange accent-3 right z-depth-0 waves-effect waves-light sumbit\" value=\"post\"/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        createActivity: activity => dispatch(createActivity(activity))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateActivity);\r\n","export const createActivity = (activity)=>{\r\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId =  getState().firebase.auth.uid;\r\n        firestore.collection('Activity').add({\r\n            ...activity,\r\n            author_F : profile.firstName,\r\n            author_L: profile.lastName,\r\n            authorId: userId,\r\n            date: new Date()\r\n        }).then(()=>{\r\n            dispatch({type: 'CREATE_ACTIVITY', activity: activity});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_ACTIVITY_ERROR', err: err});\r\n        });\r\n        \r\n    };\r\n};\r\n","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ActicityDetails from './components/activities/ActivityDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateActivity from './components/activities/CreateActivity';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/activity/:id' component={ActicityDetails}></Route>\n          <Route path='/signin' component={SignIn}></Route>\n          <Route path='/signup' component={SignUp}></Route>\n          <Route path='/create' component={CreateActivity}></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState ={\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'LOGIN_ERROR':\r\n            console.log('login fail');\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            };\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup fail:'+action.err.message);\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout');\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState ={\r\n    activities:  []\r\n}\r\n\r\nconst activityReducer = (state = initState, action) =>{\r\n    switch (action.type) {\r\n        case 'CREATE_ACTIVITY':\r\n            console.log('CREATE ACTIVITY', action.activity);   \r\n            return state;\r\n        case 'CREATE_ACTIVITY_ERROR':\r\n            console.log('CREATE ACTIVITY ERROR', action.err);   \r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default activityReducer;","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport activityReducer from './activityReducer';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    activity: activityReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDsvJRY34o4y2GttwZb9aoUYA48Eqv8jds\",\r\n    authDomain: \"events-wall.firebaseapp.com\",\r\n    databaseURL: \"https://events-wall.firebaseio.com\",\r\n    projectId: \"events-wall\",\r\n    storageBucket: \"events-wall.appspot.com\",\r\n    messagingSenderId: \"420764841323\",\r\n    appId: \"1:420764841323:web:d9e496b04520b9aa3d082e\",\r\n    measurementId: \"G-DM1M3124Y7\"\r\n};\r\n // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// no longer need this:\r\n// firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport {getFirestore, reduxFirestore} from 'redux-firestore';\nimport {getFirebase, ReactReduxFirebaseProvider} from 'react-redux-firebase';\nimport fbConfig from './config/FbConfig';\nimport firebase from 'firebase/app';\nimport {createFirestoreInstance} from 'redux-firestore';\n\n\n\nconst store = createStore(rootReducer, compose( \n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig)\n    )\n);\n\n\n// This is important to fix issue dispatch={_internalFirebase.dispatch} is null\n// Guess it need to initial the config manually \n//passing firebase(firebase/app), fbConfig, createFirestoreInstance, and set the dispath to store.dispath\n// Then using a ReactReduxFirebaseProvider(Provider) import from 'react-redux-firebase' \n//<ReactReduxFirebaseProvider {...config}></ReactReduxFirebaseProvider>\nif (!firebase.apps.length)\n    firebase.initializeApp(fbConfig);\n\nconst info = {\n    userProfile: \"users\",\n    useFirestoreForProfile: true,\n    attachAuthIsReady: true\n}\n\nconst config = {\n    firebase,\n    config: info,\n    dispatch: store.dispatch,\n    createFirestoreInstance \n  }\n  \n\nReactDOM.render(<Provider store={store}><ReactReduxFirebaseProvider {...config}><App /></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}